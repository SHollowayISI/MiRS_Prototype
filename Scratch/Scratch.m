


%% Set up constants

c = physconst('LightSpeed');
sim = struct();


%% Perform Calculations

target_pos = [500; 0; 0];
rcs = 200;                  % Absolute
tx_pow = db2pow(13 - 30);   % Watts
ant_gain = db2pow(10);      % Absolute
rx_nf = 12;                 % dB



f_c = 78.5e9;
f_s = 45e6;
t_ch = 1.6e-3;
n_p = 64;
bw = 5e9;

n_tx = 2;
n_rx = 4;
d_tx = 2;
d_rx = 0.5;

ant_cos_pow = [1 10];

n_s = f_s * t_ch;
t_fr = t_ch * n_p * n_tx;
lambda = c/f_c;


%% Signal Setup

% Transmit waveform
sim.waveform = phased.FMCWWaveform( ...
    ...
    'SampleRate',               f_s, ...
    'SweepTime',                t_ch, ...
    'SweepBandwidth',           bw, ...
    'SweepDirection',           'Up', ...
    'SweepInterval',            'Symmetric', ...
    'OutputFormat',             'Sweeps', ...
    'NumSweeps',                1);

%% Motion Platform Setup

% Set up transceiver platform
sim.radar_plat = phased.Platform( ...
    ...
    'MotionModel',              'Velocity', ...
    'InitialPosition',          [0; 0; 0], ...
    'Velocity',                 [0; 0; 0]);

%% Target Setup

% Set up fluctuating target model
sim.target = phased.RadarTarget( ...
    'EnablePolarization',       false, ...
    'MeanRCSSource',            'Property', ...
    'MeanRCS',                  rcs, ...
    'Model',                    'Nonfluctuating', ...
    'OperatingFrequency',       f_c, ...
    'PropagationSpeed',         c);

% Set up target platform position and velocity
sim.target_plat = phased.Platform( ...
    ...
    'MotionModel',              'Velocity', ...
    'InitialPosition',          target_pos, ...
    'Velocity',                 [0; 0; 0]);

%% Channel Setup

% Set up channel model
sim.channel = phased.LOSChannel( ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       f_c, ...
    'TwoWayPropagation',        true, ...
    'SampleRate',               f_s);

%% Antenna Setup

% Create antenna element object
sim.antenna = phased.CosineAntennaElement( ...
    'FrequencyRange',           f_c * [0.9 1.1], ...
    'CosinePower',              ant_cos_pow);

% Create Tx linear array
sim.tx_array = phased.ULA( ...
    'Element',                  sim.antenna, ...
    'NumElements',              n_tx, ...
    'ArrayAxis',                'y', ...
    'ElementSpacing',           lambda * d_tx);

% Create Rx linear array
sim.rx_array = phased.ULA( ...
    'Element',                  sim.antenna, ...
    'NumElements',              n_rx, ...
    'ArrayAxis',                'y', ...
    'ElementSpacing',           lambda * d_rx);

%% Transceiver Setup

% Set up transmitter parameters
sim.transmitter = phased.Transmitter( ...
    'PeakPower',                tx_pow, ...
    'Gain',                     pow2db(ant_gain), ...
    'LossFactor',               0, ...
    'InUseOutputPort',          false);
    
% Set up radiation interface
sim.radiator = phased.Radiator( ...
    'Sensor',                   sim.tx_array, ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       f_c, ...
    'CombineRadiatedSignals',   true, ...
    'WeightsInputPort',         true);

% Set up receiver parameters
sim.receiver = phased.ReceiverPreamp( ...
    'Gain',                     pow2db(ant_gain),  ...
    'NoiseFigure',              rx_nf, ...
    'SampleRate',               f_s);
    
% Set up receiver radiation interface
sim.collector = phased.Collector( ...
    'Sensor',                   sim.rx_array, ...
    'PropagationSpeed',         c, ...
    'OperatingFrequency',       f_c, ...
    'Wavefront',                'Plane');




